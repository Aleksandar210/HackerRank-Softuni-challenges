// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftJailDbEntityFrameworkCore.Data;

namespace SoftJailDbEntityFrameworkCore.Data.Migrations
{
    [DbContext(typeof(SoftJailDbContext))]
    [Migration("20210223143434_updateRelation")]
    partial class updateRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Cell", b =>
                {
                    b.Property<int>("CellId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CellNumber")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<bool>("HasWindow")
                        .HasColumnType("bit");

                    b.HasKey("CellId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Mail", b =>
                {
                    b.Property<int>("MailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrisonerId")
                        .HasColumnType("int");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MailId");

                    b.HasIndex("PrisonerId");

                    b.ToTable("Mails");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Officer", b =>
                {
                    b.Property<int>("OfficerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WeaponId")
                        .HasColumnType("int");

                    b.HasKey("OfficerId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.HasIndex("WeaponId");

                    b.ToTable("Officers");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.OfficerPrisoner", b =>
                {
                    b.Property<int>("PrisonerId")
                        .HasColumnType("int");

                    b.Property<int>("OfficerId")
                        .HasColumnType("int");

                    b.HasKey("PrisonerId", "OfficerId");

                    b.HasIndex("OfficerId");

                    b.ToTable("OfficerPrisoners");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PositionName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Prisoner", b =>
                {
                    b.Property<int>("PrisonerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<decimal>("Bail")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CellId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("IncarcerationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PrisonerId");

                    b.HasIndex("CellId");

                    b.ToTable("Prisoners");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Weapon", b =>
                {
                    b.Property<int>("WeaponId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WeaponName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WeaponId");

                    b.ToTable("Weapons");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Cell", b =>
                {
                    b.HasOne("SoftJailDbEntityFrameworkCore.Data.Models.Department", "Department")
                        .WithMany("Cells")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Mail", b =>
                {
                    b.HasOne("SoftJailDbEntityFrameworkCore.Data.Models.Prisoner", "Prisoner")
                        .WithMany("Mails")
                        .HasForeignKey("PrisonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prisoner");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Officer", b =>
                {
                    b.HasOne("SoftJailDbEntityFrameworkCore.Data.Models.Department", "Department")
                        .WithMany("Officers")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftJailDbEntityFrameworkCore.Data.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftJailDbEntityFrameworkCore.Data.Models.Weapon", "Weapon")
                        .WithMany()
                        .HasForeignKey("WeaponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Position");

                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.OfficerPrisoner", b =>
                {
                    b.HasOne("SoftJailDbEntityFrameworkCore.Data.Models.Officer", "Officer")
                        .WithMany("Prisoners")
                        .HasForeignKey("OfficerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SoftJailDbEntityFrameworkCore.Data.Models.Prisoner", "Prisoner")
                        .WithMany("Officers")
                        .HasForeignKey("PrisonerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Officer");

                    b.Navigation("Prisoner");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Prisoner", b =>
                {
                    b.HasOne("SoftJailDbEntityFrameworkCore.Data.Models.Cell", "Cell")
                        .WithMany("Prisoners")
                        .HasForeignKey("CellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cell");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Cell", b =>
                {
                    b.Navigation("Prisoners");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Department", b =>
                {
                    b.Navigation("Cells");

                    b.Navigation("Officers");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Officer", b =>
                {
                    b.Navigation("Prisoners");
                });

            modelBuilder.Entity("SoftJailDbEntityFrameworkCore.Data.Models.Prisoner", b =>
                {
                    b.Navigation("Mails");

                    b.Navigation("Officers");
                });
#pragma warning restore 612, 618
        }
    }
}
